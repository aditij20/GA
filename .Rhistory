install.packages("ggplot2")
ggplot(worldpop, aes(x=Year, y=Population)) + geom_line() + geom_point()
ggplot2(worldpop, aes(x=Year, y=Population)) + geom_line() + geom_point()
ggplot(worldpop, aes(x=Year, y=Population)) + geom_line() + geom_point()
library(ggplot2)
ggplot(worldpop, aes(x=Year, y=Population)) + geom_line() + geom_point()
ggplot(worldpop, aes(x=Year, y=Population)) + geom_line() + geom_point() +
scale_y_log10()
)
ggplot(worldpop, aes(x=Year, y=Population)) + geom_line() + geom_point() +
scale_y_log10()))
ggplot(worldpop, aes(x=Year, y=Population)) + geom_line() + geom_point() +
scale_y_log10())
ggplot(worldpop, aes(x=Year, y=Population)) + geom_line() + geom_point() +
scale_y_log10()
''
qplot(wt, mpg, data=mtcars)
plot(pressure$temperature, pressure$pressure, type="l")
lines(pressure$temperature, pressure$pressure/2, col="red")
points(pressure$temperature, pressure$pressure/2, col="red")
barplot(BOD$demand, names.arg=BOD$Time)
BOD
table(mtcars$cyl)
mtcars
plot(ToothGrowth$supp, ToothGrowth$len)
boxplot(len ~ supp, data = ToothGrowth)
boxplot(len ~ supp + dose, data = ToothGrowth)
boxplot(len ~ supp, data = ToothGrowth)
boxplot(len ~ supp + dose, data = ToothGrowth)
qplot(ToothGrowth$supp, ToothGrowth$len, geom="boxplot")
qplot(supp, len, data=ToothGrowth, geom="boxplot")
ggplot(ToothGrowth, aes(x=supp, y=len)) + geom_boxplot()
curve(x^3 - 5*x, from=-4, to=4)
myfun <- function(xvar) { 1/(1 + exp(-xvar + 10))
''
''
}
myfun <- function(xvar) { 1/(1 + exp(-xvar + 10))
}
curve(myfun(x), from=0, to=20)
curve(1-myfun(x), add = TRUE, col = "red")
ggplot(data.frame(x=c(0, 20)), aes(x=x)) + stat_function(fun=myfun, geom="line")
ggplot(pg_mean, aes(x=group, y=weight)) + geom_bar(stat="identity")
BOD
str(BOD)
cabbage_exp
fix(myfun)
ggplot(upc, aes(x=reorder(Abb, Change), y=Change, fill=Region)) +
geom_bar(stat="identity", colour="black") +
scale_fill_manual(values=c("#669933", "#FFCC66")) +
xlab("State")
upc <- subset(uspopchange, rank(Change)>40)
ggplot(upc, aes(x=reorder(Abb, Change), y=Change, fill=Region)) +
geom_bar(stat="identity", colour="black") +
scale_fill_manual(values=c("#669933", "#FFCC66")) +
xlab("State")
ggplot(BOD, aes(x=Time, y=demand)) + geom_bar(stat="identity")
viewData(upc)
BOD
ggplot(heightweight, aes(x=ageYear, y=heightIn, size=weightLb, colour=sex)) + geom_point(alpha=.5) +
scale_size_area() + # Make area proportional to numeric value scale_colour_brewer(palette="Set1")
)
ggplot(heightweight, aes(x=ageYear, y=heightIn, size=weightLb, colour=sex)) + geom_point(alpha=.5) + scale_size_area() + # Make area proportional to numeric value scale_colour_brewer(palette="Set1")
''
ggplot(heightweight, aes(x=ageYear, y=heightIn, size=weightLb, colour=sex)) + geom_point(alpha=.5) + scale_size_area() + (palette="Set1")
require(colorbrewer)
install.packages('colorbrewere')
install.packages('colorbrewer')
install.packages('brewer')
install.packages('ecolorbrewer')
install.packages('rcolorbrewer')
install.packages('Rcolorbrewer')
install.packages('RColorBrewer')
require('RColorBrewer')
ggplot(heightweight, aes(x=ageYear, y=heightIn, size=weightLb, colour=sex)) + geom_point(alpha=.5) + scale_size_area() + (palette="Set1")
RColorBrewer::?
RColorBrewer::
sp <- ggplot(diamonds, aes(x=carat, y=price))
fix(sp)
sp + geom_point()
sp + geom_point(alpha=.1)
sp + geom_point(alpha=.01)
sp + geom_point(alpha=.05)
sp + geom_point(alpha=.07)
sp + stat_bin2d()
sp + stat_bin2d(bins=50)
sp + stat_bin2d(bins=30)
sp + stat_bin2d(bins=100)
sp + stat_bin2d(bins=200)
sp + stat_bin2d(bins=50) +
scale_fill_gradient(low="lightblue", high="red", limits=c(0, 6000))
sp + stat_bin2d(bins=50) +
scale_fill_gradient(low="lightblue", high="red", limits=c(0, 1000))
library(MASS)
b <- biopsy
viewData(b)
b$classn[b$class=="benign"]    <- 0
b$classn[b$class=="malignant"] <- 1
b
b.head
head(b)
library(MASS)
birthwt1 <- birthwt
birthwt1$smoke <- factor(birthwt1$smoke)
ggplot(birthwt1, aes(x=bwt, colour=smoke)) + geom_density()
import(ggplot)
require(ggplot)
require(ggplot2)
ggplot(birthwt1, aes(x=bwt, colour=smoke)) + geom_density()
viewData(birthwt1)
ggplot(birthwt1, aes(x=bwt, fill=smoke)) + geom_density(alpha=.3)
ggplot(birthwt1, aes(x=bwt)) + geom_density() + facet_grid(smoke ~ .)
levels(birthwt1$smoke)
library(plyr)
birthwt1$smoke <- revalue(birthwt1$smoke, c("0"="No Smoke", "1"="Smoke"))
ggplot(birthwt1, aes(x=bwt)) + geom_density() + facet_grid(smoke ~ .)
ggplot(birthwt, aes(x=factor(race), y=bwt)) + geom_boxplot()
birthwt$bwt
ggplot(birthwt, aes(x=factor(race), y=bwt)) +
geom_boxplot(outlier.size=1.5, outlier.shape=21)
library(gcookbook)
sp <- ggplot(marathon, aes(x=Half,y=Full)) + geom_point()
sp + coord_fixed()
fix(sp)
sp
sp + coord_fixed()
sp + coord_fixed() + line
sp + coord_fixed() + stat_smooth(method=lm)
sp + geom_point() + stat_smooth(method=lm, level=0.99)
sp + geom_point() + stat_smooth(method=lm, level=0.95)
sp + scale_colour_hue(l=45)
sp + scale_colour_hue(l=45) + geom_point() + stat_smooth(method=lm, level=0.95)
sp
library(RColorBrewer)
display.brewer.all()
sp + scale_fill_brewer(palette="Oranges")
sp + scale_fill_brewer(palette="Set3")
library(corrplot)
install.packages(corrplot)
install.packages("corrplot"")
""
install.packages("corrplot)
install.packages("corrplot")
install.packages("corrplot")
corrplot(marathon)
library(corrplot)
corrplot(marathon)
marathon
head(marathon)
corrplot(marathon$half, marathon$full)
d <- dataframe(marathon)
d <- DataFrame(marathon)
help(marathon)
d <- data.frame(marathon)
corrplot(d)
tail(marathon)
corrplot(d)
d
viewData(d)
type(d)
d$full
d
head(d)
d$Half
library(gcookbook)
simpledat
barplot(simpledat, beside=TRUE)
scatterplot
ggplot(data=simpledat)
ggplot(data=simpledat,geom=scatterplot)
ggplot(data=simpledat,geom_histogram)
ggplot(data=simpledat,aes(x=simpledat.a1,y=simpledat.b1),geom_histogram)
ggplot(data=simpledat,aes(x=simpledat[,1],y=simpledat.[1,]),geom_histogram)
viewData(b)
viewData(d)
mtcar
viewData(b)
x <- 10
x
x = "hello"
len(x)
length(x)
help(length)
nchar(452)
y = 452
nchar(y)
vector1 = c(188.2, 181.3, 193.4)
vector2 = c("jeff", "roger", "andrew", "brian") myList = list(heights = vector1, firstNames = vector2)
vector2 = c("jeff", "roger", "andrew", "brian")
myList = list(heights = vector1, firstNames = vector2)
mylist
fix(myList)
myList
x <- c("data")
x
x <- c("data","more")
x
as.character(x)
is.character(x)
as.character(x)
TRUE
TRUE * 5
1:10
1.1:10.88
1.2:10.88
install.packages(XML)
install.packages('XML'')
install.packages('XML'')
install.packages('XML')
theURL <- "http://www.jaredlander.com/2012/02/another-kind-of-super-bowl-pool/"
bowlPool <- readHTMLTable(theURL, which = 1, header = FALSE,
stringsAsFactors = FALSE)
require(XML)
bowlPool <- readHTMLTable(theURL, which = 1, header = FALSE,
stringsAsFactors = FALSE)
bowlPool
theURL <- "http://www.w3schools.com/html/html_tables.asp"
bowlPool <- readHTMLTable(theURL, which = 1, header = FALSE,
stringsAsFactors = FALSE)
bowlPool
bowlPool <- readHTMLTable(theURL, which = 2, header = FALSE,
stringsAsFactors = FALSE)
bowlPool
require(ggplot2)
data(diamonds)
hist(diamonds$carat, main = "Carat Histogram", xlab = "Carat")
plot(price ~ carat, data = diamonds)
"A"=="A"
"A"=="B "
ggplot
import(ggplot)
require(ggplot)
require(ggplot2)
ggplot(data = diamonds) + geom_histogram(aes(x = carat))
ggplot(data = diamonds) + geom_density(aes(x = carat), fill = "grey50")
g <- ggplot(diamonds, aes(x = carat, y = price))
?geom_point()
g + geom_point(aes(color = color)) + facet_wrap(~color)
ggplot(diamonds, aes(y = carat, x = cut)) + geom_boxplot()
?which
g <- ggplot(econ2000, aes(x = month, y = pop))
require(lubridate)
install.packages(lubridate)
install.packages("lubridate"")
''
""
install.packages("lubridate)
""
""
install.packages("lubridate")
require(lubridate)
economics$year <- year(economics$date)
economics$month <- month(economics$date, label = TRUE)
econ2000 <- economics[which(economics$year >= 2000), ]
require(scales)
g <- ggplot(econ2000, aes(x = month, y = pop))
g <- g + geom_line(aes(color = factor(year), group = year))
g <- g + scale_color_discrete(name = "Year")
g <- g + scale_y_continuous(labels = comma)
g + labs(title = "Population Growth", x = "Month", y = "Population")
g <- ggplot(econ2000, aes(x = month, y = pop))
g <- ggplot(econ2000, aes(x = month, y = pop))
g <- g + geom_line(aes(color = factor(year), group = year))
g <- g + scale_color_discrete(name = "Year")
g <- g + scale_y_continuous(labels = comma)
g + labs(title = "Population Growth", x = "Month", y = "Population")
g <- g + scale_color_discrete(name = "Year2")
g <- g + scale_color_discrete(name = "Year2")
g <- g + scale_color_discrete(name = "Year")
g <- g + scale_color_discrete(name = "Year2")
g + labs(title = "Population Growth", x = "Month", y = "Population")
version()
version
library(xlsx)
install.packages('xlsx')
library(xlsx)
fileUrl <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.xlsx?accessType=DOWNLOAD"
download.file(fileUrl,destfile="./data/camera.xlsx",method="curl")
cameraData <- read.xlsx2("./data/camera.xlsx",sheetIndex=1)
cameraData <- read.xlsx2("camera.xlsx",sheetIndex=1)
download.file(fileUrl,destfile="camera.xlsx",method="curl")
cameraData <- read.xlsx2("camera.xlsx",sheetIndex=1)
head(cameraData)
args(rbinom)
args(rnorm)
plot(rnorm(100,100,20))
set.seed(12345); par(mar=rep(0.2,4))
dataMatrix <- matrix(rnorm(400),nrow=40)
image(1:10,1:40,t(dataMatrix)[,nrow(dataMatrix):1])
par(mar=rep(0.2,4))
heatmap(dataMatrix)
use.switch <- function(x)
{switch(x, a = "first", b = "second", z = "last", c = "third", "other")}
use.switch("a")
use.switch("b")
use.switch(`)
''
''
''
""
;
`
`
))
View(economics)
fix(use.switch)
use.switch(1)
use.switch(4)
use.switch(5)
use.switch(6)
fix(use.switch)
use.switch(5)
?list
theMatrix <- matrix(1:9, nrow = 3)
apply(theMatrix, 1, sum)
apply(theMatrix, 2, sum)
View(birthwt1)
apply(birthwt1, 2, sum)
View(bowlPool)
apply(birthwt1, 1, sum)
apply(bowlPool, 1, sum)
apply(econ2000, 1, sum)
matrix
?apply
require(ggplot2)
data(diamonds)
head(diamonds)
aggregate(price ~ cut, diamonds, mean)
aggregate(price ~ color, diamonds, mean)
aggregate(price ~ color, diamonds, sum)
aggregate(price ~ cut, diamonds, sum)
aggregate(price ~ cut, color, diamonds, sum)
aggregate(price ~ cut, diamonds, sum)
?aggregate
aggregate(price ~ c(cut, diamonds), sum)
aggregate(price ~ c("cut", "diamonds"), sum)
aggregate(price ~ c("cut", "color"), diamonds,sum)
aggregate(price ~ cut + color, diamonds, sum)
aggregate(price ~  color + cut , diamonds, sum)
?ddply
import(plyr)
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
install.packages(plyr)
install.packages("plyr"")
""
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
require(plyr)
?ddply
sport <- c("Hockey", "Baseball", "Football")
league <- c("NHL", "MLB", "NFL")
trophy <- c("Stanley Cup", "Commissioner's Trophy", "Vince Lombardi Trophy")
trophies1 <- cbind(sport, league, trophy)
trophies2 <- data.frame(sport = c("Basketball", "Golf"), league = c("NBA",
"PGA"), trophy = c("Larry O'Brien Championship Trophy", "Wanamaker Trophy"),
stringsAsFactors = FALSE)
trophies1
trophies2
trophies <- rbind(trophies1, trophies2)
trophies
cbind(Sport = sport, Association = league, Prize = trophy)
nameToUse <- str_sub(string = a, start = 12, end = 18)
require(stringr)
nameToUse <- str_sub(string = a, start = 12, end = 18)
require(XML)
presidents <- readHTMLTable("http://www.loc.gov/rr/print/list/057_chron.html",
+     which = 3, as.data.frame = TRUE, skip.rows = 1, header = TRUE,
+     stringsAsFactors = FALSE)
presidents <- readHTMLTable("http://www.loc.gov/rr/print/list/057_chron.html",
which = 3, as.data.frame = TRUE, skip.rows = 1, header = TRUE,stringsAsFactors = FALSE)
presidents <- readHTMLTable("http://www.loc.gov/rr/print/list/057_chron.html",which = 3, as.data.frame = TRUE, skip.rows = 1, header = TRUE,stringsAsFactors = FALSE)
head(presidents)
tail(presidents$year)
tail(presidents$YEAR)
acs <- read.table("http://jaredlander.com/data/acs_ny.csv", sep = ",",
header = TRUE, stringsAsFactors = FALSE)
acs <- read.table("http://jaredlander.com/data/acs_ny.csv", sep = ",",
header = TRUE, stringsAsFactors = FALSE)
del(x)
?del
?delvar
install.packages('ggplot2')
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
setwd("/Volumes/DATA/robert/Desktop/Projects/GA")
library(MASS)
plot(crabs)
ggplot(crabs, aes(x=FL, y=RW)) + geom_point() + geom_smooth(method="lm") + facet_grid( sex ~ .)
require(ggplot2)
ggplot(crabs, aes(x=FL, y=RW)) + geom_point() + geom_smooth(method="lm") + facet_grid( sex ~ .)
ggplot(crabs, aes(x=FL, y=RW, color=as.factor(sex)) + geom_point() + geom_smooth(method="lm")
)
ggplot(crabs, aes(x=FL, y=RW, color=as.factor(sex))) + geom_point() + geom_smooth(method="lm")
?plot
require(stats)
plot(cars)
lines(lowess(cars))
?lowess
lowess(cars)
plot(sin, -pi, 2*pi)
plot(table(rpois(100, 5)), type = "h", col = "red", lwd = 10,
main = "rpois(100, lambda = 5)")
?lm
?update
?options
oldcon <- options(contrasts = c("contr.treatment", "contr.poly"))
ctl <- c(4.17,5.58,5.18,6.11,4.50,4.61,5.17,4.53,5.33,5.14)
trt <- c(4.81,4.17,4.41,3.59,5.87,3.83,6.03,4.89,4.32,4.69)
group <- gl(2, 10, 20, labels = c("Ctl", "Trt"))
weight <- c(ctl, trt)
lm.D9 <- lm(weight ~ group)
lm.D9
summary(lm.D90 <- update(lm.D9, . ~ . - 1))
options(contrasts = c("contr.helmert", "contr.poly"))
update(lm.D9)
getCall(lm.D90)
plot(crabs)
plot(crabs$FL, crabs$CW)
x <- read.table("http://www.ats.ucla.edu/stat/examples/chp/p054.txt", sep="\t", h=T)
View(x)
plot(x)
fit <- lm(Y ~ ., data =x )
plot(fit)
summary(fit)
fit2 <- update(fit, .~. -X5)
plot(fit2)
summary(fit12)
summary(fit2)
fit3 <- update(fit2, .~. -X4)
plot(fit3)
summary(fit3)
fit4 <- update(fit2, .~. -X2)
plot(f4)
plot(fit4)
summary(fit4)
fit5 <- update(fit2, .~. -X6)
summary(fit5)
plot(fit4$residual)
fix(fit4)
type(fit4)
z <- read.table("http://www.ats.ucla.edu/stat/examples/chp/p081.txt", sep="\t", h=T)
View(x)
View(z)
zz <- z[2:8,]
head(zz)
zz <- z[,2:8]
head(zz)
fit <- lm(Sales ~ . , data=zz)
summary(zz)
summary(fit)
plot(fit)
fit <- lm(Sales ~  0 + . , data=zz)
summary(fit)
fit2 <- update(fit, .~., -HS)
summary(fit2)
fit2 <- update(fit, .~., -HS)
summary(fit2)
fit2 <- update(fit, .~. -HS)
summary(fit2)
fit3 <- update(fit, .~. -Female)
plot(fit3)
plot(fit3$residual)
plot(fit3)
e <- read.csv('http://heypodo.com/public/etc/enrollment.csv')
plot(e)
View(e)
tail(e)
nrow(e)
plot(e[,2:5])
plot(e$YEAR,e$ROLL)
plot(e$YEAR,e$UNEM)
plot(e$YEAR,e$HGRAD
)
plot(e$YEAR,e$INC)
fit <- lm(ROLL ~ ., data=e)
plot(fit)
fix(fit)
summary(fit)
fit <- lm(ROLL ~ ., data=e)
summary(fit)
fit2 <- update(fit, .~. -INC)
summary(fit2)
plot(fit2$residual)
plot(fit2)
fit3 <- update(fit2, .~. -UNEM)
plot(fit3)
plot(fit3)
data(stackloss)
head(stackloss)
nrow(stackloss)
plot(stackloss)
fit <- lm(stack.loss ~ ., data=stackloss)
plot(fit)
summary(fit)
fit2 <- update(fit, .~. -Acid.Conc)
summary(fit2)
View(stackloss)
fit2 <- update(fit, .~. -Acid.Conc.)
summary(fit2)
ggplot(data=stackloss,aes(x=Air.Flow,y=stack.loss)) + geom_point() + geom_smooth(method=lm(fit2))
ggplot(data=stackloss,aes(x=Air.Flow,y=stack.loss)) + geom_point() + stat_smooth(method=lm(fit2))
ggplot(data=stackloss,aes(x=Air.Flow,y=stack.loss)) + geom_point() + stat_smooth(method=lm)
